{"mappings":"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","sources":["SOLID/3.I/old.js"],"sourcesContent":["\"use strict\";\r\nclass User {\r\n    constructor() {\r\n        this._password = 'user';\r\n    }\r\n    //Interesting detail here: while I did not define a return type or param type, any deviation from the interface will give you an error.\r\n    // Test it out by uncommenting the code below.\r\n    checkGoogleLogin(token) {\r\n        // return \"this will not work\";\r\n        return (token === this._googleToken);\r\n    }\r\n    setGoogleToken(token) {\r\n        this._googleToken = token;\r\n    }\r\n    getFacebookLogin(token) {\r\n        return (token === this._facebookToken);\r\n    }\r\n    setFacebookToken(token) {\r\n        this._facebookToken = token;\r\n    }\r\n    checkPassword(password) {\r\n        return (password === this._password);\r\n    }\r\n    resetPassword() {\r\n        this._password = prompt('What is your new password?');\r\n    }\r\n}\r\n//admin cannot use google or facebook token\r\nclass Admin {\r\n    constructor() {\r\n        this._password = 'admin';\r\n    }\r\n    checkGoogleLogin(token) {\r\n        return false;\r\n    }\r\n    checkPassword(password) {\r\n        return (password === this._password);\r\n    }\r\n    getFacebookLogin(token) {\r\n        return false;\r\n    }\r\n    setFacebookToken() {\r\n        throw new Error('Function not supported for admins');\r\n    }\r\n    setGoogleToken() {\r\n        throw new Error('Function not supported for admins');\r\n    }\r\n    resetPassword() {\r\n        this._password = prompt('What is your new password?');\r\n    }\r\n}\r\n// class GoogleBot implements UserAuth {}\r\nconst passwordElement = document.querySelector('#password');\r\nconst typePasswordElement = document.querySelector('#typePassword');\r\nconst typeGoogleElement = document.querySelector('#typeGoogle');\r\nconst typeFacebookElement = document.querySelector('#typeFacebook');\r\nconst loginAsAdminElement = document.querySelector('#loginAsAdmin');\r\nconst resetPasswordElement = document.querySelector('#resetPassword');\r\nlet guest = new User;\r\nlet admin = new Admin;\r\ndocument.querySelector('#login-form').addEventListener('submit', (event) => {\r\n    event.preventDefault();\r\n    let user = loginAsAdminElement.checked ? admin : guest;\r\n    if (!loginAsAdminElement.checked) {\r\n        user.setGoogleToken('secret_token_google');\r\n        user.setFacebookToken('secret_token_fb');\r\n    }\r\n    debugger;\r\n    let auth = false;\r\n    switch (true) {\r\n        case typePasswordElement.checked:\r\n            auth = user.checkPassword(passwordElement.value);\r\n            break;\r\n        case typeGoogleElement.checked:\r\n            auth = user.checkGoogleLogin('secret_token_google');\r\n            break;\r\n        case typeFacebookElement.checked:\r\n            debugger;\r\n            auth = user.getFacebookLogin('secret_token_fb');\r\n            break;\r\n    }\r\n    if (auth) {\r\n        alert('login success');\r\n    }\r\n    else {\r\n        alert('login failed');\r\n    }\r\n});\r\nresetPasswordElement.addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n    let user = loginAsAdminElement.checked ? admin : guest;\r\n    user.resetPassword();\r\n});\r\n"],"names":[],"version":3,"file":"index.487b9f7f.js.map","sourceRoot":"/__parcel_source_root/"}